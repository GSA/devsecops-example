version: 2
jobs:
  install_and_validate:
    docker:
      - image: 18fgsa/devsecops-builder:alpine
    steps:
      - checkout

      - run:
          name: bootstrap - Set up Terraform
          command: terraform init -backend=false -input=false
          working_directory: ~/project/terraform/bootstrap

      - run:
          name: mgmt - Create Terraform variables file
          command: cp terraform.tfvars.example terraform.tfvars
          working_directory: ~/project/terraform/mgmt
      - run:
          name: mgmt - Set up Terraform
          command: terraform init -backend=false -input=false
          working_directory: ~/project/terraform/mgmt

      - run:
          name: env - Set up Terraform
          command: terraform init "-backend-config=bucket=$TF_ENV_BUCKET" -input=false
          working_directory: ~/project/terraform/env

      - run:
          name: Run validations
          command: make validate

      - persist_to_workspace:
          root: .
          paths:
            - ./*

  build_ami:
    docker:
      - image: 18fgsa/devsecops-builder:alpine
    steps:
      - attach_workspace:
          at: .

      - run:
          name: Bootstrap the environment
          command: terraform apply -input=false -auto-approve -target=aws_route53_record.db
          working_directory: ~/project/terraform/env

      - run:
          name: Build WordPress AMI
          command: make ami

  # AMI builds are slow, so keeping the environment deploy separate so it can be re-run separately if needed
  deploy_env:
    docker:
      - image: 18fgsa/devsecops-builder:alpine
    steps:
      - attach_workspace:
          at: .

      - add_ssh_keys
      - run:
          name: Disable host key checking
          command: printf "\nHost *\n\tStrictHostKeyChecking no" >> ~/.ssh/config

      - run:
          name: Deploy the full environment
          command: terraform apply -input=false -auto-approve
          working_directory: ~/project/terraform/env

workflows:
  version: 2

  validate_and_deploy:
    jobs:
      - install_and_validate
      - build_ami:
          filters:
            branches:
              only: master
          requires:
            - install_and_validate
      - deploy_env:
          filters:
            branches:
              only: master
          requires:
            - build_ami
