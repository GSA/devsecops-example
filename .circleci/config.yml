version: 2
jobs:
  install_ansible_roles:
    docker:
      - image: williamyeh/ansible:alpine3
    steps:
      - checkout
      - run:
          name: Install Ansible dependencies
          command: apk add --no-cache git
      - run:
          name: Download Ansible dependencies
          command: ansible-galaxy install -p ansible/roles -r ansible/requirements.yml
      - persist_to_workspace:
          root: .
          paths:
            - ./*

  validate_packer:
    docker:
      - image: hashicorp/packer
    steps:
      - checkout
      - run:
          name: Validate Jenkins template
          command: packer validate -syntax-only packer/jenkins.json
      - run:
          name: Validate WordPress template
          command: packer validate -syntax-only packer/wordpress.json

  validate_terraform:
    docker:
      - image: hashicorp/terraform
    steps:
      - attach_workspace:
          at: .

      - run:
          name: Create fake SSH public key
          command: mkdir -p ~/.ssh && touch ~/.ssh/id_rsa.pub

      - run:
          name: bootstrap - Set up Terraform
          command: cd terraform/bootstrap && terraform init -backend=false
      - run:
          name: bootstrap - Validate Terraform
          command: cd terraform/bootstrap && terraform validate

      - run:
          name: mgmt - Create Terraform variables file
          command: cd terraform/mgmt && cp terraform.tfvars.example terraform.tfvars
      - run:
          name: mgmt - Set up Terraform
          command: cd terraform/mgmt && terraform init -backend=false
      - run:
          name: mgmt - Validate Terraform
          command: cd terraform/mgmt && terraform validate

      - run:
          name: env - Set up Terraform
          command: cd terraform/env && terraform init "-backend-config=bucket=$TF_ENV_BUCKET"
      - run:
          name: env - Validate Terraform
          command: cd terraform/env && terraform validate
      - persist_to_workspace:
          root: .
          paths:
            - terraform/env/.terraform/*

  bootstrap_env:
    docker:
      - image: hashicorp/terraform
    steps:
      - attach_workspace:
          at: .

      - run:
          name: Bootstrap the environment
          command: cd terraform/env && terraform apply -input=false -auto-approve -target=aws_route53_record.db

workflows:
  version: 2

  validate_and_deploy:
    jobs:
      - install_ansible_roles
      - validate_packer
      - validate_terraform:
          requires:
            - install_ansible_roles
      - bootstrap_env:
          # TODO master branch only? https://circleci.com/docs/2.0/workflows/#branch-level-job-execution
          requires:
            - validate_terraform
